"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.createSongCommand = void 0;
const player_1 = require("../utils/player");
/**
 * Creates a `/song` command for getting information about the currently played track.
 */
const createSongCommand = (playerManager, options) => {
    return {
        name: "song",
        description: playerManager.translations.song.description,
        run: (interaction) => __awaiter(void 0, void 0, void 0, function* () {
            var _a;
            const player = playerManager.find(interaction.guildId);
            const currentTrack = player === null || player === void 0 ? void 0 : player.getCurrentTrack();
            if (!player || !currentTrack) {
                yield interaction.reply({
                    content: playerManager.translations.global.noGuildPlayer,
                    ephemeral: (_a = options === null || options === void 0 ? void 0 : options.ephemeralError) !== null && _a !== void 0 ? _a : true,
                });
                return false;
            }
            yield interaction.reply({
                content: playerManager.translations.song.success.replace("{track}", (0, player_1.trackToMarkdown)(currentTrack)),
                ephemeral: options === null || options === void 0 ? void 0 : options.ephemeral,
            });
            return true;
        }),
    };
};
exports.createSongCommand = createSongCommand;
//# sourceMappingURL=song.js.map